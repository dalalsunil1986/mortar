window.esdocSearchIndex = [
  [
    "mortar/src/mortar.js~context",
    "class/src/mortar.js~Context.html",
    "<span>Context</span> <span class=\"search-result-import-path\">mortar/src/mortar.js</span>",
    "class"
  ],
  [
    "mortar/src/mortar.js~iscontext",
    "function/index.html#static-function-isContext",
    "<span>isContext</span> <span class=\"search-result-import-path\">mortar/src/mortar.js</span>",
    "function"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~arraybuffer",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~boolean",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~dataview",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~date",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Date",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~error",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Error",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~evalerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~float32array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~float64array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~function",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Function",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~generator",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~generatorfunction",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~infinity",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~int16array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~int32array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~int8array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~internalerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~json",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~map",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Map",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~nan",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~number",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Number",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~object",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Object",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~promise",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~proxy",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~rangeerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~referenceerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~reflect",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~regexp",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~set",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Set",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~string",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~String",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~symbol",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~syntaxerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~typeerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~urierror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~uint16array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~uint32array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~uint8array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~uint8clampedarray",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~weakmap",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~weakset",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~boolean",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~function",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~function",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~null",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~null",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~number",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~number",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~object",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~object",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~string",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~string",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~undefined",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~audiocontext",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~canvasrenderingcontext2d",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~documentfragment",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~element",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~Element",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~event",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~Event",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~node",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~Node",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~nodelist",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~NodeList",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~xmlhttprequest",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "external"
  ],
  [
    "src/mortar.js",
    "file/src/mortar.js.html",
    "src/mortar.js",
    "file"
  ],
  [
    "src/mortar.js~context#constructor",
    "class/src/mortar.js~Context.html#instance-constructor-constructor",
    "src/mortar.js~Context#constructor",
    "method"
  ],
  [
    "src/mortar.js~context#has",
    "class/src/mortar.js~Context.html#instance-method-has",
    "src/mortar.js~Context#has",
    "method"
  ],
  [
    "src/mortar.js~context#module",
    "class/src/mortar.js~Context.html#instance-member-module",
    "src/mortar.js~Context#module",
    "member"
  ],
  [
    "src/mortar.js~context#parent",
    "class/src/mortar.js~Context.html#instance-member-parent",
    "src/mortar.js~Context#parent",
    "member"
  ],
  [
    "src/mortar.js~context#providers",
    "class/src/mortar.js~Context.html#instance-member-providers",
    "src/mortar.js~Context#providers",
    "member"
  ],
  [
    "src/mortar.js~context#release",
    "class/src/mortar.js~Context.html#instance-method-release",
    "src/mortar.js~Context#release",
    "method"
  ],
  [
    "src/mortar.js~context#require",
    "class/src/mortar.js~Context.html#instance-method-require",
    "src/mortar.js~Context#require",
    "method"
  ],
  [
    "src/mortar.js~context#resolve",
    "class/src/mortar.js~Context.html#instance-method-resolve",
    "src/mortar.js~Context#resolve",
    "method"
  ],
  [
    "src/mortar.js~context#retrieve",
    "class/src/mortar.js~Context.html#instance-method-retrieve",
    "src/mortar.js~Context#retrieve",
    "method"
  ],
  [
    "src/mortar.js~context#spawn",
    "class/src/mortar.js~Context.html#instance-method-spawn",
    "src/mortar.js~Context#spawn",
    "method"
  ],
  [
    "src/mortar.js~context#using",
    "class/src/mortar.js~Context.html#instance-method-using",
    "src/mortar.js~Context#using",
    "method"
  ],
  [
    "src/mortar.js~context#wire",
    "class/src/mortar.js~Context.html#instance-method-wire",
    "src/mortar.js~Context#wire",
    "method"
  ],
  [
    "src/mortar.js~context.create",
    "class/src/mortar.js~Context.html#static-method-create",
    "src/mortar.js~Context.create",
    "method"
  ],
  [
    "src/mortar.js~context.getdependencies",
    "class/src/mortar.js~Context.html#static-method-getDependencies",
    "src/mortar.js~Context.getDependencies",
    "method"
  ],
  [
    "src/mortar.js~context.register",
    "class/src/mortar.js~Context.html#static-method-register",
    "src/mortar.js~Context.register",
    "method"
  ],
  [
    "test/mortar.spec.js",
    "test-file/test/mortar.spec.js.html",
    "test/mortar.spec.js",
    "testFile"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber10",
    "{mortar}",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber25",
    "{mortar} Context",
    "test"
  ],
  [
    "context#release src/mortar.js~context#release,context#release",
    "test-file/test/mortar.spec.js.html#lineNumber381",
    "{mortar} Context #release()",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber388",
    "{mortar} Context #release() should not throw when unregistering an unregistered dependency",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber382",
    "{mortar} Context #release() should unregister a dependency",
    "test"
  ],
  [
    "context#require src/mortar.js~context#require,context#require",
    "test-file/test/mortar.spec.js.html#lineNumber161",
    "{mortar} Context #require()",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber173",
    "{mortar} Context #require() should require the file and allow wiring it up as a producer",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber167",
    "{mortar} Context #require() should require the file and allow wiring it up as a singleton producer",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber163",
    "{mortar} Context #require() should throw if no `module` was provided",
    "test"
  ],
  [
    "context#resolve src/mortar.js~context#resolve,context#resolve",
    "test-file/test/mortar.spec.js.html#lineNumber183",
    "{mortar} Context #resolve()",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber203",
    "{mortar} Context #resolve() should allow resolving a dependency with a falsy value",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber188",
    "{mortar} Context #resolve() should resolve a function's dependencies",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber222",
    "{mortar} Context #resolve() should simply call a function without dependencies",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber198",
    "{mortar} Context #resolve() should throw an error when a dependency is not found",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber213",
    "{mortar} Context #resolve() should throw an error when trying to resolve anything else but a function",
    "test"
  ],
  [
    "context#retrieve src/mortar.js~context#retrieve,context#retrieve",
    "test-file/test/mortar.spec.js.html#lineNumber233",
    "{mortar} Context #retrieve()",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber276",
    "{mortar} Context #retrieve() should not retrieve the downstream value when the upstream one is requested",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber282",
    "{mortar} Context #retrieve() should not throw when the value is falsy",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber270",
    "{mortar} Context #retrieve() should retrieve the downstream value when overriding the upstream one",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber265",
    "{mortar} Context #retrieve() should retrieve the upstream value when none is wired downstream",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber259",
    "{mortar} Context #retrieve() should return a new instance for producers",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber244",
    "{mortar} Context #retrieve() should return the same instance for singletons",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber251",
    "{mortar} Context #retrieve() should separate singleton instances for different keys",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber238",
    "{mortar} Context #retrieve() should throw an error when `key` is falsy",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber239",
    "{mortar} Context #retrieve() should throw an error when the key is not found",
    "test"
  ],
  [
    "context#spawn src/mortar.js~context#spawn,context#spawn",
    "test-file/test/mortar.spec.js.html#lineNumber370",
    "{mortar} Context #spawn()",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber371",
    "{mortar} Context #spawn() should create a child context",
    "test"
  ],
  [
    "context#using src/mortar.js~context#using,context#using",
    "test-file/test/mortar.spec.js.html#lineNumber295",
    "{mortar} Context #using()",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber300",
    "{mortar} Context #using() should allow overriding dependencies when resolving",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber352",
    "{mortar} Context #using() should allow using a different context for overriding dependencies",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber343",
    "{mortar} Context #using() should call a function to use its result for overriding dependencies",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber358",
    "{mortar} Context #using() should fallback to the current context when using a different context for overriding dependencies",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber316",
    "{mortar} Context #using() should not throw an error when overridden with a falsy value",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber347",
    "{mortar} Context #using() should resolve a function to use its result for overriding dependencies",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber309",
    "{mortar} Context #using() should throw an error when a dependency is not found",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber325",
    "{mortar} Context #using() should throw an error when trying to resolve anything else but a function",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber334",
    "{mortar} Context #using() should throw an error when trying to use anything else but a \"real\" object, Context or function",
    "test"
  ],
  [
    "context#wire src/mortar.js~context#wire,context#wire",
    "test-file/test/mortar.spec.js.html#lineNumber113",
    "{mortar} Context #wire()",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber127",
    "{mortar} Context #wire() should allow registration of a function as a producer",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber123",
    "{mortar} Context #wire() should allow registration of a function as a singleton",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber131",
    "{mortar} Context #wire() should allow registration of a value as a value",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber141",
    "{mortar} Context #wire() should allow wiring falsy values",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber135",
    "{mortar} Context #wire() should throw an error when `key` is already used",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber118",
    "{mortar} Context #wire() should throw an error when `subject` is `undefined`",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber148",
    "{mortar} Context #wire() should throw an error when using anything else but a string as a key",
    "test"
  ],
  [
    "context.create src/mortar.js~context.create,context.create",
    "test-file/test/mortar.spec.js.html#lineNumber46",
    "{mortar} Context .create()",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber47",
    "{mortar} Context .create() should create a Context instance",
    "test"
  ],
  [
    "context.getdependencies src/mortar.js~context.getdependencies,context.getdependencies",
    "test-file/test/mortar.spec.js.html#lineNumber55",
    "{mortar} Context .getDependencies()",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber56",
    "{mortar} Context .getDependencies() should return all the dependencies of a function",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber61",
    "{mortar} Context .getDependencies() should throw for anything else but a function",
    "test"
  ],
  [
    "context.providers src/mortar.js~context#providers,context.providers",
    "test-file/test/mortar.spec.js.html#lineNumber29",
    "{mortar} Context .providers",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber30",
    "{mortar} Context .providers should be an object",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber36",
    "{mortar} Context .providers should register a `producer` provider",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber33",
    "{mortar} Context .providers should register a `singleton` provider",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber39",
    "{mortar} Context .providers should register a `value` provider",
    "test"
  ],
  [
    "context.register src/mortar.js~context.register,context.register",
    "test-file/test/mortar.spec.js.html#lineNumber74",
    "{mortar} Context .register()",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber89",
    "{mortar} Context .register() should register a named function",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber75",
    "{mortar} Context .register() should register a provider object",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber100",
    "{mortar} Context .register() should throw an error when trying to re-register",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber11",
    "{mortar} module",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber12",
    "{mortar} module should be a class",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber15",
    "{mortar} module should be instantiatable",
    "test"
  ],
  [
    "",
    "test-file/test/mortar.spec.js.html#lineNumber19",
    "{mortar} module should throw an error when called directly",
    "test"
  ]
]